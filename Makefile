GOCMD=go
GOBUILD=$(GOCMD) build
GOCLEAN=$(GOCMD) clean
GOTEST=$(GOCMD) test
GOGET=$(GOCMD) get

OUTDIR=./out
OUT_MAC=$(OUTDIR)/mac_64
OUT_WIN=$(OUTDIR)/win_64

BINARY_PATH_ZIPPER=$(OUTDIR)/zipper/zipper

BINARY_NAME_RUNTIME=SuddenlyMuscleTrainer
BINARY_PATH_RUNTIME=$(OUT_MAC)/$(BINARY_NAME_RUNTIME)
BINARY_PATH_RUNTIME_WIN=$(OUT_WIN)/$(BINARY_NAME_RUNTIME).exe

BINARY_NAME_SETTING=SettingTool
BINARY_PATH_SETTING=$(OUT_MAC)/$(BINARY_NAME_SETTING)
BINARY_PATH_SETTING_WIN=$(OUT_WIN)/$(BINARY_NAME_SETTING).exe

WINBUILDFLAG=GOOS=windows GOARCH=amd64
WINBUILDFLAG_FYNE=CC=x86_64-w64-mingw32-gcc CGO_ENABLED=1

RUNTIMEDIR=./runtime
GUIDIR=./gui
ZIPPERDIR=./zipper

PRODDIR=$(OUTDIR)/prod
PROD_MAC=SuddenlyMuscleTrainer_OSX.zip
PROD_WIN=SuddenlyMuscleTrainer_win64.zip
PROD_MAC_PATH=$(PRODDIR)/$(PROD_MAC)
PROD_WIN_PATH=$(PRODDIR)/$(PROD_WIN)

SETTINGFILE=./build/setting.json

.PHONY: build

all: build zip
build:
	$(GOBUILD) -o $(BINARY_PATH_ZIPPER) $(ZIPPERDIR)
	$(GOBUILD) -o $(BINARY_PATH_RUNTIME) -v $(RUNTIMEDIR)
	$(GOBUILD) -o $(BINARY_PATH_SETTING) -v $(GUIDIR)
	$(WINBUILDFLAG) $(GOBUILD) -o $(BINARY_PATH_RUNTIME_WIN) -v $(RUNTIMEDIR)
	$(WINBUILDFLAG) $(WINBUILDFLAG_FYNE) $(GOBUILD) -o $(BINARY_PATH_SETTING_WIN) -v $(GUIDIR)
zip:
	$(BINARY_PATH_ZIPPER) -o $(PROD_MAC_PATH) $(BINARY_PATH_RUNTIME) $(BINARY_PATH_SETTING) $(SETTINGFILE)
	$(BINARY_PATH_ZIPPER) -o $(PROD_WIN_PATH) $(BINARY_PATH_RUNTIME_WIN) $(BINARY_PATH_SETTING_WIN) $(SETTINGFILE)
test:
	$(GOTEST) -v ./...
clean:
	$(GOCLEAN)
	rm -f $(BINARY_PATH_RUNTIME)
	rm -f $(BINARY_PATH_RUNTIME_WIN)
	rm -f $(BINARY_PATH_SETTING)
	rm -f $(BINARY_PATH_SETTING_WIN)
run:
	$(GOBUILD) -o $(BINARY_NAME) -v ./...
	./$(BINARY_NAME)
